#use "topfind.camlp5";;
#require "oUnit";;
#require "fmt";;
#require "rresult";;
#require "pcre";;
#require "bos";;
#require "uutf";;
#require "yaml";;
#require "camlp5.pa_o";;
#require "yojson" ;;
#require "sedlex" ;;
#require "pa_ppx.testutils" ;;
#require "pa_ppx.base" ;;
#require "pa_ppx.runtime" ;;

let lexbuf_contents lb =
  let open Lexing in
  let pos = lb.lex_curr_pos in
  let len = lb.lex_buffer_len - lb.lex_curr_pos in
  (Bytes.to_string (Bytes.sub lb.lex_buffer pos len))
;;

let pp_lexbuf lb =
  Format.print_string "#<lexbuf:<";
  Format.print_string (lexbuf_contents lb);
  Format.print_string ">>"
;;
#install_printer pp_lexbuf ;;

print_string "================ START ================\n";; flush stdout ;;

open Pa_ppx_utils.Std ;;
open Yojson.Basic ;;

#load "ututil.cmo";;
open Ututil ;;
#load "uttestutil.cmo";;
open Uttestutil ;;
#load "utypes.cmo";;
open Utypes ;;
#load "utlexing.cmo";;
open Utlexing ;;
#load "utmigrate.cmo";;
open Utmigrate ;;
#load "utparse0.cmo";;
open Utparse0 ;;
#load "utprint.cmo";;
open Utprint ;;
#load "utio.cmo";;
open Utio ;;

let top pp x = Fmt.(pf stdout "%s" (pp x)) ;;

let top_fpath x = top Fpath.to_string x ;;
#install_printer top_fpath ;;

let top_id x = top Normal.id_printer x ;;
#install_printer top_id ;;
let top_utype x = top Normal.printer x ;;
#install_printer top_utype ;;
let top_struct_item x = top Normal.struct_item_printer x ;;
#install_printer top_struct_item ;;
let top_sig_item x = top Normal.sig_item_printer x ;;
#install_printer top_sig_item ;;

let top_module_type x = top Normal.module_type_printer x ;;
#install_printer top_module_type ;;

let top_module_expr x = top Normal.module_expr_printer x ;;
#install_printer top_module_expr ;;

let top_module_path x = top Normal.module_path_printer x ;;
#install_printer top_module_path ;;

let top_yojson j = Fmt.(pf stdout "%s" (Yojson.Basic.pretty_to_string j)) ;;
#install_printer top_yojson ;;
let top_json (j : Utconv.json) = top_yojson j ;;
#install_printer top_json ;;

#load "utconv.cmo";;
open Utconv ;;
#load "uttypecheck.cmo";;
open Uttypecheck ;;
#load "utextract.cmo";;
open Utextract ;;
#load "utsimplify.cmo";;
open Utsimplify ;;
#load "utvalidate.cmo";;
open Utvalidate ;;
(*
#load "syntax_test.cmo";;
open Syntax_test ;;
*)
(*
#load "typing_test.cmo";;
open Typing_test ;;
*)
(*
#load "eval_test.cmo";;
open Eval_test ;;

#trace ElimEmptyLocal.exec ;;
#trace S1ElimImport.exec ;;
#trace S2ElimLocal.exec ;;
#trace S3NameFunctorAppSubterms.exec ;;
#trace S4Typecheck.exec ;;
#trace S5ElimInclude.exec ;;
#trace S7RenameOverridden.exec ;;
#trace S8Absolute.exec ;;
#trace ElimCastCast.exec ;;
#trace S10ReduceFunctorApp.exec ;;
*)
(*
#load "simplify_test.cmo";;
open Simplify_test ;;
*)

#load "validate_test.cmo";;
open Validate_test ;;

(*
#load "schemastore_test.cmo";;
open Schemastore_test ;;
*)
(*
#use "jq_examples.ml";;
*)

#print_length 10000;;
#print_depth 10000;;
(*
;;; Local Variables: ***
;;; mode:tuareg ***
;;; End: ***

*)
