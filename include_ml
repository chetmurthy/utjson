#use "topfind.camlp5";;
#require "oUnit";;
#require "fmt";;
#require "rresult";;
#require "pcre";;
#require "bos";;
#require "uutf";;
#require "yaml";;
#require "camlp5.pa_o";;
#require "yojson" ;;
#require "sedlex" ;;
#require "pa_ppx.testutils" ;;
#require "pa_ppx.base" ;;
#require "pa_ppx.runtime" ;;

let lexbuf_contents lb =
  let open Lexing in
  let pos = lb.lex_curr_pos in
  let len = lb.lex_buffer_len - lb.lex_curr_pos in
  (Bytes.to_string (Bytes.sub lb.lex_buffer pos len))
;;

let pp_lexbuf lb =
  Format.print_string "#<lexbuf:<";
  Format.print_string (lexbuf_contents lb);
  Format.print_string ">>"
;;
#install_printer pp_lexbuf ;;

print_string "================ START ================\n";; flush stdout ;;

open Yojson.Basic ;;

#load "utypes.cmo";;
open Utypes ;;
#load "ututil.cmo";;
open Ututil ;;
#load "utlexing.cmo";;
open Utlexing ;;
#load "utparse0.cmo";;
open Utparse0 ;;
#load "utprint.cmo";;
open Utprint ;;

let top pp x = Fmt.(pf stdout "<< %s >>" (pp Pprintf.empty_pc x)) ;;

let top_utype x = top print_utype x ;;
#install_printer top_utype ;;

let top_struct_item x = top print_struct_item x ;;
#install_printer top_struct_item ;;

let top_sig_item x = top print_sig_item x ;;
#install_printer top_sig_item ;;

let top_module_type x = top print_module_type x ;;
#install_printer top_module_type ;;

let top_module_expr x = top print_module_expr x ;;
#install_printer top_module_expr ;;

#load "utconv.cmo";;
open Utconv ;;
#load "uttypecheck.cmo";;
open Uttypecheck ;;
#load "utvalid0.cmo";;
open Utvalid0.Env ;;
open Utvalid0 ;;
(*
#load "syntax_test.cmo";;
open Syntax_test ;;
*)
#load "typing_test.cmo";;
open Typing_test ;;

(*
#use "jq_examples.ml";;
*)

let val1 schf jf =
let j = Yojson.Basic.from_file jf in
let e0 = elab (load_file schf) in
let (t, e) = lookup e0 ["t"] in validate j e t ;;

#print_length 1000;;
#print_depth 1000;;
(*
;;; Local Variables: ***
;;; mode:tuareg ***
;;; End: ***

*)
