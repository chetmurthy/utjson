module DEFINITIONS = struct
 type rec moduleType = [ enum "docker"; ]
and status = [ enum "running", "stopped"; ]
and restartPolicy = [ enum "never", "on-failure", "on-unhealthy", "always"; ]
and moduleSettings = object && [
    "image": string;
    "createOptions": createOptions;
] && [ required "image"; ]
and [sealed] env = seal object with
    /^[^\+#$\s\.]+$/ : (object && [ "value": number || string || boolean; ] && [ required "value"; ])
and createOptions = string && [ contentMediaType "application/json"; ];
end ;
open DEFINITIONS ;
 type nonrec [sealed] t = seal (object && [
    "$edgeAgent": object && [
        "properties.desired": object && [
            "schemaVersion": string && [ /1.0/ ];
            "runtime": object && [
                "type": moduleType;
                "settings": object && [
                    "minDockerVersion": string;
                    "loggingOptions": string;
                    "registryCredentials": (seal object with /^.+$/ : object && [
                            "username": string;
                            "password": string;
                            "address": string && [ /^[^\s]+$/ ];
] && [ required "username",  "password",  "address"; ]);
];
] && [ required "type",  "settings"; ];
            "systemModules": seal (object && [
                "edgeAgent": object && [
                    "type": moduleType;
                    "settings": moduleSettings;
                    "env": env;
] && [ required "type",  "settings"; ];
                "edgeHub": object && [
                    "type": moduleType;
                    "settings": moduleSettings;
                    "env": env;
                    "status": status;
                    "restartPolicy": restartPolicy;
] && [ required "type",  "settings",  "status",  "restartPolicy"; ];
] && [ required "edgeAgent",  "edgeHub"; ]);
            "modules": seal object with
                /^[a-zA-Z0-9_-]+$/ : (object && [
                    "version": string;
                    "type": moduleType;
                    "status": status;
                    "restartPolicy": restartPolicy;
                    "env": env;
                    "settings": moduleSettings;
] && [ required "type",  "status",  "restartPolicy",  "settings"; ]);
] && [ required "schemaVersion",  "runtime",  "systemModules",  "modules"; ];
] && [ required "properties.desired"; ];
] && [ required "$edgeAgent"; ]);
end;
