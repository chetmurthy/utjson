module DEFINITIONS = struct
type rec [sealed] apidoc = seal (object && [ "version": string; ] && [ required "version"; ])
and [sealed] info = seal (object && [
    "contact": contact;
    "license": license;
])
and [sealed] contact = seal (object && [
    "name": string;
    "url": string;
    "email": string;
])
and [sealed] license = seal (object && [
    "name": string;
    "url": string;
] && [ required "name"; ])
and [sealed] import_ = seal (object && [ "uri": string; ] && [ required "uri"; ])
and [sealed] header = seal (object && [
    "name": string;
    "type": string;
    "required": boolean && [ default true ; ];
    "default": Predefined.json;
    "description": string;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
] && [ required "name",  "type"; ])
and [sealed] attribute = seal (object && [
    "name": string;
    "value": object;
] && [ required "name",  "value"; ])
and [sealed] deprecation = seal (object && [ "description": string; ])
and [sealed] enum_ = seal object with
    /^[a-zA-Z0-9_]*$/ : seal (object && [
        "plural": string;
        "description": string;
        "values": array && [ of enumvalues; ];
        "attributes": array && [ of attribute; ];
        "deprecation": deprecation;
] && [ required "values"; ])

and [sealed] enumvalues = seal (object && [
    "name": string;
    "value": string;
    "description": string;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
] && [ required "name"; ])
and [sealed] interface = seal object with
    /^[a-zA-Z0-9_]*$/ : seal (object && [
        "plural": string;
        "description": string;
        "fields": array && [ of field; ];
        "attributes": array && [ of attribute; ];
        "deprecation": deprecation;
] && [ required "values"; ])
and [sealed] field = seal (object && [
    "name": string && [ /^[a-zA-Z0-9_]*$/ ];
    "type": string;
    "description": string;
    "required": boolean && [ default true ; ];
    "default": Predefined.json;
    "example": string;
    "minimum": Predefined.integer;
    "maximum": Predefined.integer;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
    "annotations": array && [ of string; ];
] && [ required "name",  "type"; ])
and [sealed] model = seal object with
    /^[a-zA-Z0-9_]*$/ : object && [
        "description": string;
        "plural": string;
        "interfaces": interface;
        "fields": array && [ of field; ];
        "attributes": array && [ of attribute; ];
        "deprecation": deprecation;
]
and [sealed] union = seal object with
    /^[a-zA-Z0-9_]*$/ : seal (object && [
        "plural": string;
        "discriminator": string;
        "description": string;
        "interfaces": interface;
        "types": array && [ of uniontype; ];
        "attributes": array && [ of attribute; ];
        "deprecation": deprecation;
] && [ required "types"; ])
and [sealed] uniontype = seal (object && [
    "type": string;
    "description": string;
    "default": boolean;
    "discriminator_value": string;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
] && [ required "type"; ])
and [sealed] resource = seal object with
    /^[a-zA-Z0-9_.]*$/ : seal (object && [
        "path": string;
        "description": string;
        "operations": array && [ of operation; ];
        "attributes": array && [ of attribute; ];
        "deprecation": deprecation;
] && [ required "operations"; ])
and [sealed] operation = seal (object && [
    "method": string;
    "path": string;
    "description": string;
    "body": body;
    "parameters": array && [ of parameter; ];
    "responses": response;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
] && [ required "method"; ])
and [sealed] parameter = seal (object && [
    "name": string && [ /^[a-zA-Z0-9_]*$/ ];
    "type": string;
    "location": string;
    "description": string;
    "required": boolean && [ default true ; ];
    "default": Predefined.json;
    "example": string;
    "minimum": Predefined.integer;
    "maximum": Predefined.integer;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
] && [ required "name",  "type"; ])
and [sealed] response = seal object with
    /^[0-9]*$/ : seal (object && [
        "type": string;
        "headers": array && [ of header; ];
        "description": string;
        "attributes": array && [ of attribute; ];
        "deprecation": deprecation;
] && [ required "type"; ])
and [sealed] body = seal (object && [
    "type": string;
    "description": string;
    "attributes": array && [ of attribute; ];
    "deprecation": deprecation;
] && [ required "type"; ]);
end ;
open DEFINITIONS ;
type nonrec [sealed] t = seal ([
    "name": string;
    "apidoc": apidoc;
    "info": info;
    "namespace": string;
    "base_url": string;
    "description": string;
    "imports": array && [ of import_; ];
    "headers": array && [ of header; ];
    "enums": enum_;
    "interfaces": interface;
    "models": model;
    "unions": union;
    "resources": resource;
    "attributes": array && [ of attribute; ];
    "annotations": array && [ of string; ];
] && [ required "name"; ]); end
;
