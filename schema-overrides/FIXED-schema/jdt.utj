import "lib/predefined.utj" as Predefined;
  module DEFINITIONS = struct
    type _jdt_path = string ;
    type _jdt_value = string ;
   type jpv = [ "@jdt.path": _jdt_path; "@jdt.value": _jdt_value ] ;
   type ao_jpv = (array && [ of jpv ] || object && jpv) ;
   type rec _TheType = object && [
        "@jdt.rename": ao_jpv;
        "@jdt.replace": ao_jpv;
        "@jdt.remove": (array && [ of boolean || Predefined.integer || null || number || object || string; ] ||
	                boolean ||
			object && [ "@jdt.path": _jdt_path; ] ||
			string);
        "@jdt.merge": ao_jpv;
] && [ orelse _TheType; ];
    end;
  open DEFINITIONS;
  type nonrec t = _TheType;
