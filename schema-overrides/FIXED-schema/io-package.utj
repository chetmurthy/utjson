import "lib/predefined.utj" as Predefined;
  module DEFINITIONS = struct
    type rec multilingual = object && [ /en|de|ru|pt|nl|fr|it|es|pl|zh-cn/ : string; ] && (object && [ sealed; ]) && [ required "en"; ];
    end;
  open DEFINITIONS;
  type nonrec t = object && [
      "$schema": string;
      "common": object && [
          "name": string && [ /^(?![i|I][o|O][b|B][r|R][o|O][k|K][e|E][r|R])/ ];
          "version": string && [
              /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/
];
          "platform": string && [ enum "Javascript/Node.js"; ];
          "titleLang": multilingual;
          "news": object && [
              /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/ : multilingual;
] && (object && [ size [1,20]; ]) && object && [ sealed; ];
          "desc": multilingual;
          "messagebox": boolean;
          "readme": string;
          "docs": object && [
              /en|de|ru|pt|nl|fr|it|es|pl|zh-cn/ : string || (array && [ of string; ] && [ size [1,max]; ]);
] && (object && [ sealed; ]) && [ required "en"; ];
          "authors": array && [ of string; ] && [ size [1,max]; ];
          "license": string && [
              enum "afl-3.0", "AFL-3.0", "apache-2.0", "Apache-2.0",
              "artistic-2.0", "Artistic-2.0", "bsl-1.0", "BSL-1.0",
              "bsd-2-clause", "BSD-2-Clause", "bsd-3-clause", "BSD-3-Clause",
              "BSD-3-Clause-Clear", "bsd-3-clause-clear", "cc", "CC",
              "cc0-1.0", "CC0-1.0", "cc-by-4.0", "CC-BY-4.0", "cc-by-sa-4.0",
              "CC-BY-SA-4.0", "wtfpl", "WTFPL", "ecl-2.0", "ECL-2.0",
              "epl-1.0", "EPL-1.0", "epl-2.0", "EPL-2.0", "eupl-1.1",
              "EUPL-1.1", "agpl-3.0", "AGPL-3.0", "gpl", "GPL", "gpl-2.0",
              "GPL-2.0", "gpl-3.0", "GPL-3.0", "lgpl", "LGPL", "lgpl-2.1",
              "LGPL-2.1", "lgpl-3.0", "LGPL-3.0", "isc", "ISC", "lppl-1.3c",
              "LPPL-1.3c", "ms-pl", "MS-PL", "mit", "MIT", "mpl-2.0",
              "MPL-2.0", "osl-3.0", "OSL-3.0", "postgresql", "PostgreSQL",
              "ofl-1.1", "OFL-1.1", "ncsa", "NCSA", "unlicense", "Unlicense",
              "zlib", "Zlib";
];
          "type": string && [
              enum "alarm", "climate-control", "communication",
              "date-and-time", "energy", "metering", "garden", "general",
              "geoposition", "hardware", "health", "household",
              "infrastructure", "iot-systems", "lighting", "logic",
              "messaging", "misc-data", "multimedia", "network", "protocols",
              "storage", "utility", "visualization", "visualization-icons",
              "visualization-widgets", "weather";
];
          "unsafePerm": boolean;
          "plugins": object;
          "adminColumns": array && [
              of object && [
                  "name": string || multilingual;
                  "path": string;
                  "width": number && [ bounds [0.0,max]; ];
                  "align": string && [ enum "left", "right", "center", "justify"; ];
                  "type": string;
                  "edit": boolean;
                  "objTypes": array && [ of string; ];
] && [ required "name",  "path",  "width",  "align"; ];
] && [ size [1,max]; ];
          "adminTab": object && [
              "fa-icon": string;
              "ignoreConfigUpdate": boolean;
              "link": string;
              "name": multilingual;
              "singleton": boolean;
] && (object && [ sealed; ]) && [ required "fa-icon",  "link",  "name"; ];
          "controller": boolean;
          "allowInit": boolean;
          "availableModes": array && [
              of string && [ enum "none", "daemon", "subscribe", "schedule", "once", "extension"; ];
] && [ size [1,max]; ];
          "blockly": boolean;
          "connectionType": string && [ enum "local", "cloud"; ];
          "compact": boolean;
          "dataFolder": string;
          "dataSource": string && [ enum "poll", "push", "assumption"; ];
          "dependencies": array && [ of object || string; ];
          "enabled": boolean;
          "eraseOnUpload": boolean;
          "extIcon": string;
          "getHistory": boolean;
          "globalDependencies": array && [ of object || string; ];
          "icon": string;
          "keywords": array && [ of string; ];
          "localLinks": object && [ /.+/ : string; ];
          "loglevel": string && [ enum "silly", "debug", "info", "warn", "error"; ];
          "logTransporter": boolean;
          "materialize": boolean;
          "materializeTab": boolean;
          "mode": string && [ enum "none", "daemon", "subscribe", "schedule", "once", "extension"; ];
          "noConfig": boolean;
          "noIntro": boolean;
          "noRepository": boolean;
          "nogit": boolean;
          "nondeletable": boolean;
          "onlyWWW": boolean;
          "osDependencies": object && [ /linux|darwin|win32/ : array && [ of string; ]; ] && object && [ sealed; ];
          "os": string && [ enum "linux", "darwin", "win32"; ] || array && [ of string && [ enum "linux", "darwin", "win32"; ]; ] && [ size [1,max]; ];
          "preserveSettings": (string || array) && [ of string; ];
          "restartAdapters": array && [ of string; ];
          "schedule": string;
          "serviceStates": boolean || string;
          "singletonHost": boolean;
          "singleton": boolean;
          "stopBeforeUpdate": boolean;
          "stopTimeout": number && [ bounds [0.0,max]; ] && [ default 500; ] && [ multipleOf 1.0; ];
          "subscribable": boolean;
          "subscribe": string;
          "supportCustoms": boolean;
          "supportStopInstance": boolean;
          "wakeup": boolean;
          "webByVersion": boolean;
          "webExtendable": boolean;
          "webExtension": string;
          "webPreSettings": object;
          "webservers": array && [ of string; ];
          "welcomeScreen": array && [ of string || object; ];
          "welcomeScreenPro": array && [ of string || object; ];
          "wwwDontUpload": boolean;
] && (object && [ sealed; ]) && [
          required "name",  "version",  "platform",  "titleLang",  "news", 
          "desc",  "mode";
];
      "objects": array && [ of object && [ "_id": string; ] && [ required "_id"; ]; ];
      "instanceObjects": array && [ of object && [ "_id": string; ] && [ required "_id"; ]; ];
      "notifications": array && [ of object; ];
      "native": object;
      "protectedNative": array && [ of string; ];
      "encryptedNative": array && [ of string; ];
] && (object && [ sealed; ]) && [ required "common"; ];
